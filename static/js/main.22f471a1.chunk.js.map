{"version":3,"sources":["components/hoc/mobxify.js","components/general/Icon.js","components/general/Tappable.js","components/general/Modal.js","components/general/Dialog.js","components/form/Form.js","components/form/Input.js","components/item/EditItemForm.js","components/item/NewItemForm.js","components/item/ItemModal.js","components/list/EditListForm.js","components/list/NewListForm.js","components/list/ListModal.js","utils/constants.js","components/hoc/draggableList.js","api/localStore.js","api/items.js","utils/array.js","api/lists.js","api/index.js","stores/listsStore.js","components/hoc/droppableListTarget.js","components/hoc/draggableItem.js","components/hoc/droppableItemTarget.js","components/item/Item.js","components/item/DummyItem.js","components/list/List.js","components/list/Lists.js","components/Main.js","stores/index.js","stores/dialogStore.js","App.js","stickyHover.js","index.js"],"names":["mobxify","compose","inject","apply","arguments","observer","Icon","_ref","name","className","React","createElement","classNames","Object","defineProperty","children","Tappable","component","remainingProps","objectWithoutProperties","objectSpread","Modal","hasCloseButton","isOpen","onClose","title","react_default","a","is-open","general_Tappable","onClick","general_Icon","assign","store","dialogStore","general_Modal","message","onCancel","close","cancelLabel","onOk","okLabel","Form","id","Input","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","value","target","onChange","setState","state","_this$props","autoFocus","label","type","htmlFor","concat","required","Component","EditItemForm","submit","e","preventDefault","listsStore","itemId","description","editItem","setItemModalMode","err","error","_this$props2","items","_this2","_this$state","form_Form","onSubmit","form_Input","NewItemForm","listId","addItem","itemModalMode","modeTitle","item_NewItemForm","itemModalProps","item_EditItemForm","modeUi","EditListForm","editList","setListModalMode","lists","NewListForm","addList","listModalMode","list_NewListForm","listModalProps","list_EditListForm","draggableTypes","DragSource","beginDrag","isDragging","_ref2","monitor","getItem","connect","connectDragSource","dragSource","localStore","LocalStorage","key","setItem","bind","removeItem","data","lsData","_getParsedData","_stringifyAndSetData","JSON","parse","localStorage","stringify","lsKey","api_items","add","trim","length","Error","added","getNextId","itemData","configure","1","2","3","4","delete","edit","get","removeElement","arr","element","index","indexOf","splice","insertElement","api_lists","listData","order","push","deleteItem","_localStore$getItem","move","listToMoveId","newPosition","moveItem","source","position","list1","list2","moveList","api","deleteList","forEach","_lists$get","listsData","ListStore","extendObservable","observable","action","mode","modalProps","load","_api$get","_api$addItem","_api$addList","_api$editItem","_api$editList","_api$moveItem","id1","listData1","id2","listData2","newPos","newOrder","itemListId","some","includes","canDrop","hover","draggedListId","DropTarget","connectDropTarget","dropTarget","sourceId","getListIdOfItem","hoc","droppableItemTarget","draggableItem","item","is-moving","areYouSure","droppableListTarget","draggableList","list","map","item_Item","item_DummyItem","list_List","Main","list_Lists","stores","DialogStore","open","options","App","index_module","lib","backend","HTML5Backend","components_Main","general_Dialog","item_ItemModal","list_ListModal","document","addEventListener","addTouchClass","documentElement","classList","removeEventListener","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.22f471a1.chunk.js","sourcesContent":["import { inject, observer } from 'mobx-react';\nimport compose from 'lodash/fp/compose';\n\nfunction mobxify(...stores) {\n  return compose(\n    inject(...stores),\n    observer\n  );\n}\n\nexport default mobxify;\n","import React from 'react';\nimport classNames from 'classnames';\n\nfunction Icon({ name, className }) {\n  return React.createElement(\n    'i',\n    {\n      className: classNames('material-icons', { [className]: className }),\n      children: name\n    }\n  );\n}\n\nexport default Icon;","import React from 'react';\nimport classNames from 'classnames';\n\nfunction Tappable({\n  className,\n  component,\n  ...remainingProps\n}) {\n  return React.createElement(\n    component || 'a',\n    {\n      className: classNames( 'tappable', { [className]: className }),\n      ...remainingProps\n    }\n  )\n}\n\nexport default Tappable;","import React from 'react';\nimport classNames from 'classnames';\n\nimport Icon from './Icon';\nimport Tappable from './Tappable';\n\nfunction Modal({\n  hasCloseButton,\n  isOpen,\n  onClose,\n  title,\n  ...remainingProps\n}) {\n  return (\n    <div\n      className={classNames(\n        'modal',\n        { 'is-open': isOpen }\n      )}\n    >\n      <div className=\"modal-layout\">\n        <div className=\"modal-header\">\n          <div className=\"modal-title\">\n            {title}\n          </div>\n          {hasCloseButton && (\n            <Tappable className=\"modal-close btn-round\" onClick={onClose}>\n              <Icon name=\"close\" />\n            </Tappable>\n          )}\n        </div>\n        <div\n          className=\"modal-content\"\n          {...remainingProps}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React from 'react';\n\nimport mobxify from '../hoc/mobxify';\nimport Modal from './Modal';\nimport Tappable from './Tappable';\n\nfunction Dialog({ dialogStore: store }) {\n  return (\n    <Modal\n      title={store.title}\n      isOpen={store.isOpen}\n    >\n      <div className=\"dialog\">\n        {store.message && (\n          <div className=\"dialog-message\">\n            {store.message}\n          </div>\n        )}\n        <div className=\"dialog-action\">\n          <Tappable\n            className=\"btn btn-small mgn-r\"\n            onClick={() => {\n              if (store.onCancel) store.onCancel();\n              store.close();\n            }}\n          >\n            {store.cancelLabel || 'Cancel'}\n          </Tappable>\n          {store.onOk && (\n            <Tappable\n              className=\"btn btn-small\"\n              onClick={() => {\n                store.onOk();\n                store.close();\n              }}\n            >\n              {store.okLabel || 'Ok'}\n            </Tappable>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default mobxify('dialogStore')(Dialog);\n","import React from 'react';\nimport classNames from 'classnames';\n\nfunction Form({ className, ...remainingProps }) {\n  return (\n    <form\n      className={classNames(\n        'form',\n        { [className]: className }\n      )}\n      {...remainingProps}\n    />\n  );\n}\n\nexport default Form;\n","import React, { Component } from 'react';\n\nlet id = 0;\n\nclass Input extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value || ''\n    };\n    id += 1;\n  }\n\n  handleChange = ({ target: { value } }) => {\n    const { onChange } = this.props;\n    this.setState(\n      { value },\n      () => onChange && onChange(value)\n    );\n  }\n\n  render() {\n    const { value } = this.state;\n    const { autoFocus, label, type } = this.props;\n    return (\n      <div className=\"form-field\">\n        <label htmlFor={`input_${id}`}>\n          <input\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus={autoFocus}\n            id={`input_${id}`}\n            required\n            className=\"form-input\"\n            type={type}\n            value={value}\n            onChange={this.handleChange}\n          />\n          <span className=\"label\">{label}</span>\n          <span className=\"border\" />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\n\nimport Form from '../form/Form';\nimport Input from '../form/Input';\nimport mobxify from '../hoc/mobxify';\nimport Tappable from '../general/Tappable';\n\nclass EditItemForm extends Component {\n  constructor(props) {\n    super(props);\n    const { listsStore: store, itemId } = this.props;\n    this.state = {\n      description: store.items[itemId].description,\n      error: false\n    };\n  }\n\n  submit = e => {\n    e.preventDefault();\n\n    const { listsStore: store, itemId } = this.props;\n    const { description } = this.state;\n\n    try {\n      store.editItem(itemId, description);\n      store.setItemModalMode(null);\n    } catch (err) {\n      this.setState({ error: err.message });\n    }\n  }\n\n  render() {\n    const { error, description } = this.state;\n    return (\n      <Form onSubmit={this.submit}>\n        <Input\n          autoFocus\n          value={description}\n          label=\"Description\"\n          type=\"text\"\n          onChange={value => this.setState({ description: value })}\n        />\n        {error && (\n          <div className=\"form-error\">\n            {error}\n          </div>\n        )}\n        <Tappable\n          component=\"button\"\n          className=\"btn\"\n          type=\"submit\"\n        >\n          Update Task\n        </Tappable>\n      </Form>\n    );\n  }\n}\n\nexport default mobxify('listsStore')(EditItemForm);\n","import React, { Component } from 'react';\n\nimport Form from '../form/Form';\nimport Input from '../form/Input';\nimport mobxify from '../hoc/mobxify';\nimport Tappable from '../general/Tappable';\n\nclass NewItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      error: false\n    };\n  }\n\n  submit = e => {\n    e.preventDefault();\n\n    const { listsStore: store, listId } = this.props;\n    const { description } = this.state;\n\n    try {\n      store.addItem(listId, description);\n      store.setItemModalMode(null);\n    } catch (err) {\n      this.setState({ error: err.message });\n    }\n  }\n\n  render() {\n    const { error, description } = this.state;\n    return (\n      <Form onSubmit={this.submit}>\n        <Input\n          autoFocus\n          value={description}\n          label=\"Description\"\n          type=\"text\"\n          onChange={value => this.setState({ description: value })}\n        />\n        {error && (\n          <div className=\"form-error\">\n            {error}\n          </div>\n        )}\n        <Tappable\n          component=\"button\"\n          className=\"btn\"\n          type=\"submit\"\n        >\n          Add Task\n        </Tappable>\n      </Form>\n    );\n  }\n}\n\nexport default mobxify('listsStore')(NewItemForm);\n","import React from 'react';\n\nimport EditItemForm from './EditItemForm';\nimport mobxify from '../hoc/mobxify';\nimport Modal from '../general/Modal';\nimport NewItemForm from './NewItemForm';\n\nfunction ItemModal({ listsStore: store }) {\n  function modeTitle() {\n    switch (store.itemModalMode) {\n      case 'new':\n        return 'Add New Task';\n      case 'update':\n        return 'Update Task';\n      default:\n        return '';\n    }\n  }\n\n  function modeUi() {\n    switch (store.itemModalMode) {\n      case 'new':\n        return <NewItemForm {...store.itemModalProps} />;\n      case 'update':\n        return <EditItemForm {...store.itemModalProps} />;\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <Modal\n      hasCloseButton\n      isOpen={store.itemModalMode}\n      onClose={() => store.setItemModalMode(null)}\n      title={modeTitle()}\n    >\n      {modeUi()}\n    </Modal>\n  );\n}\n\nexport default mobxify('listsStore')(ItemModal);\n","import React, { Component } from 'react';\n\nimport Form from '../form/Form';\nimport Input from '../form/Input';\nimport mobxify from '../hoc/mobxify';\nimport Tappable from '../general/Tappable';\n\nclass EditListForm extends Component {\n  constructor(props) {\n    super(props);\n    const { id, listsStore: store } = props;\n\n    this.state = {\n      title: store.lists[id].title,\n      error: false\n    };\n  }\n\n  submit = e => {\n    e.preventDefault();\n\n    const { listsStore: store, id } = this.props;\n    const { title } = this.state;\n\n    try {\n      store.editList(id, title);\n      store.setListModalMode(null);\n    } catch (err) {\n      this.setState({ error: err.message });\n    }\n  }\n\n  render() {\n    const { error, title } = this.state;\n    return (\n      <Form onSubmit={this.submit}>\n        <Input\n          autoFocus\n          value={title}\n          label=\"Title\"\n          type=\"text\"\n          onChange={value => this.setState({ title: value })}\n        />\n        {error && (\n          <div className=\"form-error\">\n            {error}\n          </div>\n        )}\n        <Tappable\n          component=\"button\"\n          className=\"btn\"\n          type=\"submit\"\n        >\n          Update List\n        </Tappable>\n      </Form>\n    );\n  }\n}\n\nexport default mobxify('listsStore')(EditListForm);\n","import React, { Component } from 'react';\n\nimport Form from '../form/Form';\nimport Input from '../form/Input';\nimport mobxify from '../hoc/mobxify';\nimport Tappable from '../general/Tappable';\n\nclass NewListForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      error: false\n    };\n  }\n\n  submit = e => {\n    e.preventDefault();\n\n    const { listsStore: store } = this.props;\n    const { title } = this.state;\n\n    try {\n      store.addList(title);\n      store.setListModalMode(null);\n    } catch (err) {\n      this.setState({ error: err.message });\n    }\n  }\n\n  render() {\n    const { error, title } = this.state;\n    return (\n      <Form onSubmit={this.submit}>\n        <Input\n          autoFocus\n          value={title}\n          label=\"Title\"\n          type=\"text\"\n          onChange={value => this.setState({ title: value })}\n        />\n        {error && (\n          <div className=\"form-error\">\n            {error}\n          </div>\n        )}\n        <Tappable\n          component=\"button\"\n          className=\"btn\"\n          type=\"submit\"\n        >\n          Add List\n        </Tappable>\n      </Form>\n    );\n  }\n}\n\nexport default mobxify('listsStore')(NewListForm);\n","import React from 'react';\n\nimport EditListForm from './EditListForm';\nimport mobxify from '../hoc/mobxify';\nimport Modal from '../general/Modal';\nimport NewListForm from './NewListForm';\n\nfunction ListModal({ listsStore: store }) {\n  function modeTitle() {\n    switch (store.listModalMode) {\n      case 'new':\n        return 'Add New List';\n      case 'update':\n        return 'Update Title';\n      default:\n        return '';\n    }\n  }\n\n  function modeUi() {\n    switch (store.listModalMode) {\n      case 'new':\n        return <NewListForm {...store.listModalProps} />;\n      case 'update':\n        return <EditListForm {...store.listModalProps} />;\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <Modal\n      hasCloseButton\n      isOpen={store.listModalMode}\n      onClose={() => store.setListModalMode(null)}\n      title={modeTitle()}\n    >\n      {modeUi()}\n    </Modal>\n  );\n}\n\nexport default mobxify('listsStore')(ListModal);\n","export const draggableTypes = {\n  ITEM: 'item',\n  LIST: 'list'\n};\n","import { DragSource } from 'react-dnd';\n\nimport { draggableTypes } from '../../utils/constants';\n\nconst source = {\n  beginDrag({ id }) {\n    return { id };\n  },\n\n  isDragging({ id }, monitor) {\n    return id === monitor.getItem().id;\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nexport default DragSource(draggableTypes.LIST, source, collect);\n","/* eslint-disable no-underscore-dangle */\nclass LocalStorage {\n  constructor(key) {\n    this.key = key;\n\n    this.setItem = this.setItem.bind(this);\n    this.getItem = this.getItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  setItem(key, data) {\n    const lsData = this._getParsedData();\n    lsData[key] = data;\n    this._stringifyAndSetData(lsData);\n  }\n\n  getItem(key) {\n    const lsData = this._getParsedData();\n    return lsData[key];\n  }\n\n  removeItem(key) {\n    const lsData = this._getParsedData();\n    delete lsData[key];\n    this._stringifyAndSetData(lsData);\n  }\n\n  _getParsedData() {\n    return JSON.parse(localStorage.getItem(this.key)) || {};\n  }\n\n  _stringifyAndSetData(data) {\n    localStorage.setItem(this.key, JSON.stringify(data));\n  }\n}\n\nconst localStore = new LocalStorage('trello-app');\n\nexport default localStore;\n","import localStore from './localStore';\n\nconst lsKey = 'api.items';\n\nfunction configureItems() {\n  let lsData = localStore.getItem(lsKey);\n  if (!lsData) {\n    /**\n     * We store items in the below format.\n     * `data` - Stores actual item data where key will be `id` of the item and property\n     *  will hold the item data.\n     * `added` - Total number of items added, used for generating unique id to new items.\n     */\n    lsData = {\n      data: {\n        1: {\n          description: 'Welcome to Task Manager'\n        },\n        2: {\n          description: 'You can add tasks to any list or create a new list.'\n        },\n        3: {\n          description: 'Lists can be reordered as per your liking.'\n        },\n        4: {\n          description: 'Tasks can be moved between different lists.'\n        }\n      },\n      added: 4\n    };\n\n    localStore.setItem(lsKey, lsData);\n  }\n}\n\nfunction getNextId() {\n  const lsData = localStore.getItem(lsKey);\n  lsData.added += 1;\n  localStore.setItem(lsKey, lsData);\n  return lsData.added;\n}\n\nfunction addItem(description) {\n  if (!description || description.trim().length < 3) {\n    throw new Error('Item description too small!');\n  } else {\n    const id = getNextId();\n    const lsData = localStore.getItem(lsKey);\n    const itemData = { description };\n    lsData.data[id] = itemData;\n    localStore.setItem(lsKey, lsData);\n    return { id, ...itemData };\n  }\n}\n\nfunction deleteItem(itemId) {\n  const lsData = localStore.getItem(lsKey);\n  delete lsData.data[itemId];\n  localStore.setItem(lsKey, lsData);\n}\n\nfunction editItem(id, description) {\n  if (!description || description.trim().length < 3) {\n    throw new Error('Item description too small!');\n  } else {\n    const lsData = localStore.getItem(lsKey);\n    lsData.data[id] = { description };\n    localStore.setItem(lsKey, lsData);\n    return { id, description };\n  }\n}\n\nfunction getItems() {\n  const { data: items } = localStore.getItem(lsKey);\n  return { items };\n}\n\nexport default {\n  add: addItem,\n  configure: configureItems,\n  delete: deleteItem,\n  edit: editItem,\n  get: getItems\n};\n","export function removeElement(arr, element) {\n  const index = arr.indexOf(element);\n  if (index > -1) {\n    arr.splice(index, 1);\n  }\n}\n\nexport function insertElement(arr, element, index) {\n  arr.splice(index, 0, element);\n}\n","import { insertElement, removeElement } from '../utils/array';\nimport localStore from './localStore';\n\nconst lsKey = 'api.lists';\n\nfunction configureLists() {\n  let lsData = localStore.getItem(lsKey);\n  if (!lsData) {\n    /**\n     * We store lists in the below format.\n     * `order` - Represents the sort order of lists, each element is id of the list.\n     * `data` - Stores actual list data.\n     * `added` - Total number of lists added, used for generating unique id to new lists.\n     */\n    lsData = {\n      order: [1, 2],\n      data: {\n        1: {\n          title: 'Introduction',\n          items: [1, 2]\n        },\n        2: {\n          title: 'Tips!',\n          items: [3, 4]\n        }\n      },\n      added: 2\n    };\n    localStore.setItem(lsKey, lsData);\n  }\n}\n\nfunction getNextId() {\n  const lsData = localStore.getItem(lsKey);\n  lsData.added += 1;\n  localStore.setItem(lsKey, lsData);\n  return lsData.added;\n}\n\nfunction addList(title) {\n  if (!title || title.trim().length < 3) {\n    throw new Error('List title too small!');\n  } else {\n    const id = getNextId();\n    const lsData = localStore.getItem(lsKey);\n    const listData = { title, items: [] };\n    lsData.data[id] = listData;\n    lsData.order.push(id);\n    localStore.setItem(lsKey, lsData);\n    return { id, ...listData };\n  }\n}\n\nfunction addItemToList(listId, itemId) {\n  const lsData = localStore.getItem(lsKey);\n  lsData.data[listId].items.push(itemId);\n  localStore.setItem(lsKey, lsData);\n}\n\nfunction deleteItemFromList(listId, itemId) {\n  const lsData = localStore.getItem(lsKey);\n  removeElement(lsData.data[listId].items, itemId);\n  localStore.setItem(lsKey, lsData);\n}\n\nfunction deleteList(listId) {\n  const lsData = localStore.getItem(lsKey);\n  removeElement(lsData.order, listId);\n  delete lsData.data[listId];\n  localStore.setItem(lsKey, lsData);\n  return lsData.order;\n}\n\nfunction editList(id, title) {\n  if (!title || title.trim().length < 3) {\n    throw new Error('List title too small!');\n  } else {\n    const lsData = localStore.getItem(lsKey);\n    lsData.data[id].title = title;\n    localStore.setItem(lsKey, lsData);\n    return { id, ...lsData.data[id] };\n  }\n}\n\nfunction getList() {\n  const { data: lists, order } = localStore.getItem(lsKey);\n  return { lists, order };\n}\n\nfunction moveItem(source, target) {\n  const lsData = localStore.getItem(lsKey);\n\n  const sourceItems = lsData.data[source.listId].items;\n  removeElement(sourceItems, source.itemId);\n\n  const targetItems = lsData.data[target.listId].items;\n  insertElement(targetItems, source.itemId, target.position);\n\n  localStore.setItem(lsKey, lsData);\n\n  return {\n    list1: { id: source.listId, ...lsData.data[source.listId] },\n    list2: { id: target.listId, ...lsData.data[target.listId] }\n  };\n}\n\nfunction moveList(listToMoveId, newPosition) {\n  const lsData = localStore.getItem(lsKey);\n  removeElement(lsData.order, listToMoveId);\n  insertElement(lsData.order, listToMoveId, newPosition);\n  localStore.setItem(lsKey, lsData);\n  return lsData.order;\n}\n\nexport default {\n  add: addList,\n  addItem: addItemToList,\n  configure: configureLists,\n  delete: deleteList,\n  deleteItem: deleteItemFromList,\n  edit: editList,\n  get: getList,\n  move: moveList,\n  moveItem\n};\n","import items from './items';\nimport lists from './lists';\n\nfunction addItem(listId, description) {\n  const itemData = items.add(description);\n  lists.addItem(listId, itemData.id);\n  return itemData;\n}\n\nfunction configure() {\n  items.configure();\n  lists.configure();\n}\n\nfunction deleteItem(listId, itemId) {\n  lists.deleteItem(listId, itemId);\n  items.delete(itemId);\n}\n\nfunction deleteList(listId) {\n  const list = lists.get().lists[listId];\n  list.items.forEach(itemId => deleteItem(listId, itemId));\n  return lists.delete(listId);\n}\n\nfunction getData() {\n  const { lists: listsData, order } = lists.get();\n  const { items: itemsData } = items.get();\n  return {\n    order,\n    lists: listsData,\n    items: itemsData\n  };\n}\n\nconst { edit: editItem } = items;\n\nconst {\n  add: addList,\n  edit: editList,\n  move: moveList,\n  moveItem\n} = lists;\n\nexport default {\n  addItem,\n  addList,\n  configure,\n  deleteItem,\n  deleteList,\n  editItem,\n  editList,\n  get: getData,\n  moveItem,\n  moveList\n};\n","import { action, extendObservable, observable } from 'mobx';\n\nimport api from '../api';\nimport { removeElement } from '../utils/array';\n\nclass ListStore {\n  constructor() {\n    extendObservable(this, {\n      lists: null,\n      items: null,\n      order: observable([]),\n\n      listModalMode: null,\n      listModalProps: {},\n      setListModalMode: action((mode, modalProps) => {\n        this.listModalMode = mode;\n        this.listModalProps = modalProps;\n      }),\n\n      itemModalMode: null,\n      itemModalProps: {},\n      setItemModalMode: action((mode, modalProps) => {\n        this.itemModalMode = mode;\n        this.itemModalProps = modalProps;\n      }),\n\n      load: action(() => {\n        const { items, lists, order } = api.get();\n        this.items = items;\n        this.lists = lists;\n        this.order = order;\n      }),\n\n      addItem: action((listId, description) => {\n        const { id, ...itemData } = api.addItem(listId, description);\n        this.items[id] = itemData;\n        this.lists[listId].items.push(id);\n      }),\n\n      addList: action(title => {\n        const { id, ...listData } = api.addList(title);\n        this.lists[id] = listData;\n        this.order.push(id);\n      }),\n\n      deleteItem: action((listId, itemId) => {\n        api.deleteItem(listId, itemId);\n        removeElement(this.lists[listId].items, itemId);\n        delete this.items[itemId];\n      }),\n\n      deleteList: action(listId => {\n        const order = api.deleteList(listId);\n        this.order = order;\n      }),\n\n      editItem: action((itemId, description) => {\n        const { id, ...itemData } = api.editItem(itemId, description);\n        this.items[id] = itemData;\n      }),\n\n      editList: action((listId, title) => {\n        const { id, ...listData } = api.editList(listId, title);\n        this.lists[id] = listData;\n      }),\n\n      moveItem: action((source, target) => {\n        const { list1, list2 } = api.moveItem(source, target);\n        const { id: id1, ...listData1 } = list1;\n        const { id: id2, ...listData2 } = list2;\n\n        this.lists[id1] = listData1;\n        this.lists[id2] = listData2;\n      }),\n\n      moveList: action((listId, newPos) => {\n        const newOrder = api.moveList(listId, newPos);\n        this.order = newOrder;\n      })\n    });\n  }\n\n  getListIdOfItem(itemId) {\n    let itemListId;\n\n    this.order.some(listId => {\n      const { items } = this.lists[listId];\n      if (items.includes(itemId)) {\n        itemListId = listId;\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return itemListId;\n  }\n}\n\nexport default new ListStore();\n","import { DropTarget } from 'react-dnd';\n\nimport { draggableTypes } from '../../utils/constants';\nimport listsStore from '../../stores/listsStore';\n\nconst target = {\n  canDrop() {\n    return false;\n  },\n\n  hover({ position }, monitor) {\n    const { id: draggedListId } = monitor.getItem();\n    listsStore.moveList(draggedListId, position);\n  }\n};\n\nfunction collect(connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n}\n\nexport default DropTarget(draggableTypes.LIST, target, collect);\n","import { DragSource } from 'react-dnd';\n\nimport { draggableTypes } from '../../utils/constants';\n\nconst source = {\n  beginDrag({ id }) {\n    return { id };\n  },\n\n  isDragging({ id }, monitor) {\n    return id === monitor.getItem().id;\n  }\n};\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nexport default DragSource(draggableTypes.ITEM, source, collect);\n","import { DropTarget } from 'react-dnd';\n\nimport { draggableTypes } from '../../utils/constants';\nimport listsStore from '../../stores/listsStore';\n\nconst target = {\n  canDrop() {\n    return false;\n  },\n\n  hover({ listId, id, position }, monitor) {\n    const sourceId = monitor.getItem().id;\n    const dragSource = {\n      itemId: sourceId,\n      listId: listsStore.getListIdOfItem(sourceId)\n    };\n    const dropTarget = { listId, position };\n\n    if (dragSource.itemId === id) {\n      return;\n    }\n\n    listsStore.moveItem(dragSource, dropTarget);\n  }\n};\n\nfunction collect(connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n}\n\nexport default DropTarget(draggableTypes.ITEM, target, collect);\n","import React from 'react';\nimport classNames from 'classnames';\nimport compose from 'lodash/fp/compose';\n\nimport draggableItem from '../hoc/draggableItem';\nimport droppableItemTarget from '../hoc/droppableItemTarget';\nimport mobxify from '../hoc/mobxify';\nimport Tappable from '../general/Tappable';\n\nfunction Item({\n  connectDragSource,\n  connectDropTarget,\n  dialogStore,\n  id,\n  isDragging,\n  listId,\n  listsStore: store\n}) {\n  const item = store.items[id];\n\n  return connectDropTarget(connectDragSource(\n    <div\n      className={classNames(\n        'item draggable',\n        { 'is-moving': isDragging }\n      )}\n    >\n      <div className=\"item-desc\">\n        {item.description}\n      </div>\n      <div className=\"item-action\">\n        <Tappable\n          className=\"btn btn-danger btn-small mgn-r\"\n          onClick={() => dialogStore.areYouSure({\n            message: 'Proceeding will delete this task and it can\\'t be undone.',\n            onOk: () => store.deleteItem(listId, id)\n          })}\n        >\n          Delete\n        </Tappable>\n        <Tappable\n          className=\"btn btn-small\"\n          onClick={() => store.setItemModalMode('update', { itemId: id })}\n        >\n          Edit\n        </Tappable>\n      </div>\n    </div>\n  ));\n}\n\nconst hoc = compose(\n  droppableItemTarget,\n  draggableItem,\n  mobxify('dialogStore', 'listsStore')\n);\n\n\nexport default hoc(Item);\n","import React from 'react';\n\nimport droppableItemTarget from '../hoc/droppableItemTarget';\n\nfunction DummyItem({\n  connectDropTarget,\n  position\n}) {\n  return connectDropTarget(\n    <div className=\"item is-dummy\">\n      {(position === 0) && <p className=\"success\">Yey, no tasks pending here!</p>}\n    </div>\n  );\n}\n\nexport default droppableItemTarget(DummyItem);\n","import React from 'react';\nimport classNames from 'classnames';\nimport compose from 'lodash/fp/compose';\n\nimport draggableList from '../hoc/draggableList';\nimport droppableListTarget from '../hoc/droppableListTarget';\nimport Icon from '../general/Icon';\nimport Item from '../item/Item';\nimport mobxify from '../hoc/mobxify';\nimport Tappable from '../general/Tappable';\nimport DummyItem from '../item/DummyItem';\n\nfunction List({\n  connectDragSource,\n  connectDropTarget,\n  dialogStore,\n  id,\n  isDragging,\n  listsStore: store\n}) {\n  const list = store.lists[id];\n\n  function itemUi(itemId, index) {\n    return <Item key={index} id={itemId} listId={id} position={index} />;\n  }\n\n  return connectDropTarget(connectDragSource(\n    <div\n      className={classNames(\n        'list draggable',\n        { 'is-moving': isDragging }\n      )}\n    >\n      <div className=\"list-info\">\n        <div className=\"list-title\">{list.title}</div>\n        <div className=\"list-action\">\n          <Tappable\n            className=\"btn btn-inverted btn-danger btn-small mgn-r\"\n            onClick={() => dialogStore.areYouSure({\n              message: `Proceeding will delete the list and all the tasks in it.\n              It can't be undone.`,\n              onOk: () => store.deleteList(id)\n            })}\n          >\n            <Icon name=\"delete\" />\n          </Tappable>\n          <Tappable\n            className=\"btn btn-inverted btn-small\"\n            onClick={() => store.setListModalMode('update', { id })}\n          >\n            <Icon name=\"edit\" />\n          </Tappable>\n        </div>\n      </div>\n      <div className=\"list-items scroll\">\n        {list.items.map(itemUi)}\n        <DummyItem position={list.items.length} id={-1} listId={id} />\n      </div>\n      <Tappable\n        className=\"btn mgn-t\"\n        onClick={() => store.setItemModalMode('new', { listId: id })}\n      >\n        Add New Task\n      </Tappable>\n    </div>\n  ));\n}\n\nconst hoc = compose(\n  droppableListTarget,\n  draggableList,\n  mobxify('dialogStore', 'listsStore')\n);\n\nexport default hoc(List);\n","import React from 'react';\n\nimport List from './List';\nimport mobxify from '../hoc/mobxify';\nimport Tappable from '../general/Tappable';\n\nfunction Lists({ listsStore: store }) {\n  function listUi(listId, index) {\n    return <List key={index} position={index} id={listId} />;\n  }\n\n  return (\n    <div className=\"lists-container scroll-h\">\n      {store.order.map(listUi)}\n      <div className=\"list-new-btn\">\n        <Tappable\n          className=\"btn\"\n          onClick={() => store.setListModalMode('new')}\n        >\n          Add New List\n        </Tappable>\n      </div>\n    </div>\n  );\n}\n\nexport default mobxify('listsStore')(Lists);\n","import React, { Component } from 'react';\n\nimport Lists from './list/Lists';\nimport mobxify from './hoc/mobxify';\n\nclass Main extends Component {\n  componentDidMount() {\n    const { listsStore: store } = this.props;\n    store.load();\n  }\n\n  render() {\n    return (\n      <div className=\"layout\">\n        <div className=\"layout-content\">\n          <Lists />\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default mobxify('listsStore')(Main);\n","import dialogStore from './dialogStore';\nimport listsStore from './listsStore';\n\nexport default {\n  dialogStore,\n  listsStore\n};\n","import { extendObservable, action } from 'mobx';\n\nclass DialogStore {\n  constructor() {\n    extendObservable(this, {\n      isOpen: false,\n      title: null,\n      message: null,\n      onOk: null,\n      okLabel: null,\n      onCancel: null,\n      cancelLabel: null,\n\n      open: action(({\n        title,\n        message,\n        okLabel,\n        cancelLabel,\n        onOk,\n        onCancel\n      }) => {\n        this.title = title;\n        this.message = message;\n        this.okLabel = okLabel;\n        this.cancelLabel = cancelLabel;\n        this.onOk = onOk;\n        this.onCancel = onCancel;\n        this.isOpen = true;\n      }),\n\n      close: action(() => {\n        this.isOpen = false;\n      }),\n\n      areYouSure: action(options => {\n        this.open(Object.assign({\n          title: 'Are You Sure?',\n          okLabel: 'Yes, Go Ahead',\n          cancelLabel: 'No, Cancel'\n        }, options));\n      })\n    });\n  }\n}\n\nexport default new DialogStore();\n","import React from 'react';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { Provider } from 'mobx-react';\n\nimport './App.scss';\nimport Dialog from './components/general/Dialog';\nimport ItemModal from './components/item/ItemModal';\nimport ListModal from './components/list/ListModal';\nimport Main from './components/Main';\nimport stores from './stores';\n\nfunction App() {\n  return (\n    <Provider {...stores}>\n      <DragDropContextProvider backend={HTML5Backend}>\n        <Main />\n        {/* Singleton components */}\n        <Dialog />\n        <ItemModal />\n        <ListModal />\n      </DragDropContextProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","export function addStickyHoverFix() {\n  document.addEventListener('touchstart', function addTouchClass(e) {\n    document.documentElement.classList.add('can-touch');\n    document.removeEventListener('touchstart', addTouchClass, false);\n  }, false);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { addStickyHoverFix } from './stickyHover';\nimport api from './api';\n\n// On mobiles/touch enabled devices `:hover` is not removed on touch release.\n// So we handle it using below function.\naddStickyHoverFix();\napi.configure();\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}